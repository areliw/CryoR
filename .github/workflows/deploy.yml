# .github/workflows/deploy.yml
name: Deploy Shiny App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RSCONNECT_TOKEN: ${{ secrets.RSCONNECT_TOKEN }}
      RSCONNECT_SECRET: ${{ secrets.RSCONNECT_SECRET }}
      R_LIBS_USER: ${{ github.workspace }}/R/library
      RSPM: "https://packagemanager.posit.co/cran/__linux__/jammy/latest"
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.4.1'
        use-public-rspm: true

    - name: Setup pandoc
      uses: r-lib/actions/setup-pandoc@v2

    - name: Cache R packages
      uses: actions/cache@v3
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ hashFiles('DESCRIPTION') }}
        restore-keys: |
          ${{ runner.os }}-r-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          libcurl4-openssl-dev \
          libssl-dev \
          libxml2-dev \
          libfontconfig1-dev \
          libharfbuzz-dev \
          libfribidi-dev \
          libfreetype6-dev \
          libpng-dev \
          libtiff5-dev \
          libjpeg-dev \
          libglpk-dev \
          libgmp3-dev

    - name: Install R dependencies
      run: |
        Rscript -e '
          if (!require("pak", quietly = TRUE)) {
            install.packages("pak", repos = "https://r-lib.github.io/p/pak/stable/")
          }
          pak::local_install_dev_deps()
          pak::pkg_install(c(
            "rsconnect",
            "shiny",
            "shinydashboard",
            "shinyjs",
            "DT",
            "googlesheets4",
            "ggplot2",
            "data.table",
            "Rcpp",
            "memoise",
            "pwr",
            "htmltools"
          ))
        '

    - name: Verify package installation
      run: |
        Rscript -e '
          required_packages <- c(
            "rsconnect",
            "shiny",
            "shinydashboard",
            "shinyjs",
            "DT",
            "googlesheets4",
            "ggplot2",
            "data.table",
            "Rcpp",
            "memoise",
            "pwr",
            "htmltools"
          )
          missing_packages <- required_packages[
            !sapply(required_packages, requireNamespace, quietly = TRUE)
          ]
          if (length(missing_packages) > 0) {
            stop("Missing packages: ", paste(missing_packages, collapse = ", "))
          }
          cat("All required packages are installed.\n")
        '

    - name: Deploy to shinyapps.io
      run: |
        Rscript -e '
          library(rsconnect)
          
          # Set account info
          rsconnect::setAccountInfo(
            name = "areliw",
            token = Sys.getenv("RSCONNECT_TOKEN"),
            secret = Sys.getenv("RSCONNECT_SECRET")
          )
          
          # Prepare file list
          files_to_deploy <- c(
            "app.R",
            "ui.R",
            "server.R",
            "global.R",
            "DESCRIPTION"
          )
          
          # Add module files
          if (dir.exists("modules")) {
            module_files <- list.files("modules", full.names = TRUE)
            files_to_deploy <- c(files_to_deploy, module_files)
          }
          
          # Add R utility files
          if (dir.exists("R")) {
            r_files <- list.files("R", full.names = TRUE)
            files_to_deploy <- c(files_to_deploy, r_files)
          }
          
          # Add www files
          if (dir.exists("www")) {
            www_files <- list.files("www", full.names = TRUE, recursive = TRUE)
            files_to_deploy <- c(files_to_deploy, www_files)
          }
          
          # Deploy with error handling
          tryCatch({
            deployApp(
              appFiles = files_to_deploy,
              appName = "pbestapp",
              forceUpdate = TRUE,
              launch.browser = FALSE
            )
          }, error = function(e) {
            message("Error during deployment: ", e$message)
            quit(status = 1)
          })
        '

    - name: Verify deployment
      run: |
        echo "Checking deployment status..."
        curl -fs "https://areliw.shinyapps.io/pbestapp/" > /dev/null || (echo "Deployment verification failed" && exit 1)
