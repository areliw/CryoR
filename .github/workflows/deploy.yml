# .github/workflows/deploy.yml
name: Deploy Shiny App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RSCONNECT_TOKEN: ${{ secrets.RSCONNECT_TOKEN }}
      RSCONNECT_SECRET: ${{ secrets.RSCONNECT_SECRET }}
      R_LIBS_USER: ${{ github.workspace }}/R/library
      
    steps:
    - uses: actions/checkout@v3

    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.4.1'

    - name: Cache R packages
      uses: actions/cache@v2
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ hashFiles('**/DESCRIPTION') }}
        restore-keys: ${{ runner.os }}-r-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          libcurl4-openssl-dev \
          libssl-dev \
          libxml2-dev \
          libfontconfig1-dev \
          libharfbuzz-dev \
          libfribidi-dev \
          libfreetype6-dev \
          libpng-dev \
          libtiff5-dev \
          libjpeg-dev

    - name: Install R dependencies
      run: |
        Rscript -e '
          if (!require("pak", quietly = TRUE)) {
            install.packages("pak", repos = "https://r-lib.github.io/p/pak/stable/")
          }
          pak::pkg_install(c(
            "rsconnect",
            "shiny@1.9.1",
            "shinydashboard@0.7.2",
            "shinyjs@2.1.0",
            "DT@0.27",
            "googlesheets4@1.1.0",
            "ggplot2@3.4.0",
            "data.table@1.14.8",
            "Rcpp@1.0.10",
            "memoise@2.0.1",
            "pwr@1.3.0",
            "htmltools@0.5.8.1"
          ))
        '

    - name: Validate environment
      run: |
        if [ -z "$RSCONNECT_TOKEN" ]; then
          echo "RSCONNECT_TOKEN is not set"
          exit 1
        fi

    - name: Deploy to shinyapps.io
      run: |
        Rscript -e '
          options(warn = 2)
          tryCatch({
            library(rsconnect)
            rsconnect::setAccountInfo(
              name="areliw",
              token=Sys.getenv("RSCONNECT_TOKEN"),
              secret=Sys.getenv("RSCONNECT_SECRET")
            )
            
            deployApp(
              appFiles = c(
                "app.R",
                "ui.R",
                "server.R",
                "global.R",
                "DESCRIPTION",
                list.files("modules", full.names = TRUE, pattern = "\\.R$"),
                list.files("R", full.names = TRUE, pattern = "\\.R$"),
                list.files("www", full.names = TRUE, recursive = TRUE)
              ),
              appName = "pbestapp",
              forceUpdate = TRUE,
              launch.browser = FALSE
            )
          }, error = function(e) {
            message("Deployment failed: ", e$message)
            quit(status = 1)
          })
        '

    - name: Wait for deployment
      run: sleep 30

    - name: Health check
      run: |
        max_attempts=5
        attempt=1
        while [ $attempt -le $max_attempts ]
        do
          echo "Health check attempt $attempt of $max_attempts"
          response=$(curl -s -o /dev/null -w "%{http_code}" https://areliw.shinyapps.io/pbestapp/)
          if [ "$response" = "200" ]; then
            echo "Application is healthy"
            exit 0
          else
            echo "Attempt $attempt failed (HTTP $response)"
            if [ $attempt -lt $max_attempts ]; then
              sleep 30
            fi
          fi
          attempt=$((attempt + 1))
        done
        echo "Health check failed after $max_attempts attempts"
        exit 1

    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" = "success" ]; then
          echo "::notice::Deployment successful - App is live at https://areliw.shinyapps.io/pbestapp/"
        else
          echo "::error::Deployment failed - Check logs for details"
        fi
